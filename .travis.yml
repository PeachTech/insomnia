language: node_js

matrix:
  include:
    - os: linux
      install:
        - npm install 7zip-bin-linux > /dev/null
      sudo: required
      dist: trusty
      env: CC=clang CXX=clang++ npm_config_clang=1
      compiler: clang
      env:
        - PLATFORM=linux

#    - os: linux
#      dist: trusty
#      env: CC=clang CXX=clang++ npm_config_clang=1
#      compiler: clang
#      env:
#        - PLATFORM=win
#        # prevent wine popup dialogs about installing additional packages
#        - WINEDLLOVERRIDES="mscoree,mshtml="

    - os: osx
      install:
        - npm install 7zip-bin-mac > /dev/null
      env:
        - PLATFORM=mac
        - CSC_LINK=$MAC_CSC_LINK
        - CSC_KEY_PASSWORD=$MAC_CSC_KEY_PASSWORD

before_install:
  # Wine
  - if [[ "$PLATFORM" == "win" ]]; then sudo dpkg --add-architecture i386; fi
  - if [[ "$PLATFORM" == "win" ]]; then wget https://dl.winehq.org/wine-builds/Release.key; fi
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-key add Release.key; fi
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-add-repository "https://dl.winehq.org/wine-builds/ubuntu/" -y; fi
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-get update -q; fi
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-get install --no-install-recommends winehq-stable -y; fi
  # Mono
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF; fi
  - if [[ "$PLATFORM" == "win" ]]; then echo "deb http://download.mono-project.com/repo/ubuntu trusty main" | sudo tee /etc/apt/sources.list.d/mono-official.list; fi
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-get update -q; fi
  - if [[ "$PLATFORM" == "win" ]]; then sudo apt-get install --no-install-recommends mono-devel ca-certificates-mono -y; fi

addons:
  artifacts:
    s3_region: "us-west-1"
    paths:
      - $(find dist -type f -name *.AppImage -o -name *.dmg | tr "\n" ":")
  
  apt:
    packages:
    - libcurl4-openssl-dev
    - git-all
    - build-essential
    - icnsutils
    - graphicsmagick
    - xz-utils

cache:
  directories:
    - node_modules
    - build/node_modules
    - $HOME/.electron
    - $HOME/.cache

install:
- npm install > /dev/null
- node --version
- npm --version

before_script:
  - ./version.sh

script:
- npm test
- npm run build-n-package:$PLATFORM

after_success:
 - ./travis_rename.sh
 - export INSOMNIA_VERION=$(node -e "console.log(require('./app/package.json').version);")
   
deploy:
  provider: s3
  s3_region: "us-west-1"
  access_key_id: $ARTIFACTS_KEY
  secret_access_key: $ARTIFACTS_SECRET
  bucket: $ARTIFACTS_BUCKET
  skip_cleanup: true
  local_dir: ./dist/deploy
  upload-dir: travis-builds/$INSOMNIA_VERSION
  on:
#   tags: true
    branch: peach/develop
